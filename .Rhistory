)
summary(trout_sem_dsep, conserve = T)
# Model w/out coll_gath
trout_sem <- psem(
glmer(trout ~ do + temp + flow + avg_daily_disch_nr_nrst_gage + biotic_index + avg_max_depth + (1|code) + (1|year), df, family = binomial(link = "logit")),
lmer(do ~ algae_cpom_wet_wt + temp + flow + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df),
glmer(algae_cpom_wet_wt ~ avg_canopy_cover + flow + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
lmer(biotic_index ~ flow + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df)
)
summary(trout_sem, conserve = T)
plot(trout_sem)
# Model w/out coll_gath based on d-sep tests
trout_sem_dsep <- psem(
glmer(trout ~ do + temp + flow + avg_daily_disch_nr_nrst_gage + biotic_index + avg_max_depth + (1|code) + (1|year), df, family = binomial(link = "logit")),
lmer(do ~ algae_cpom_wet_wt + temp + flow + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df),
glmer(algae_cpom_wet_wt ~ avg_canopy_cover + flow + avg_daily_disch_nr_nrst_gage + avg_max_depth + biotic_index + temp +  (1|code) + (1|year), df, family = poisson(link = "log")),
lmer(biotic_index ~ flow + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df)
)
summary(trout_sem_dsep, conserve = T)
plot(trout_sem_dsep)
out <- coefs(trout_sem, standardize.type = "latent.linear")
write_csv(out, "trout_sem_output.csv")
out <- coefs(trout_sem_dsep, standardize.type = "latent.linear")
write_csv(out, "trout_sem_output_dsep.csv")
library(piecewiseSEM)
forround <- c("och", "grazer", "coll_gath", "shredder")
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris %in% c(0), month == 6, year > 2012) %>%
mutate(across(all_of(forround), round, 0))
# model of hypothesized DAG
algae_sem <- psem(
glmer(trout ~ avg_max_depth + (1|code) + (1|year), df, family = binomial(link = "logit")),
glmer(och ~ trout + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(coll_gath ~ och + trout + algae_cpom_wet_wt + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(grazer ~ trout + avg_max_depth + algae_cpom_wet_wt + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(algae_cpom_wet_wt ~ avg_daily_disch_nr_nrst_gage + avg_canopy_cover + (1|code) + (1|year), df, family = poisson(link = "log"))
)
algae_sem2 <- update(algae_sem, avg_canopy_cover %~~% avg_max_depth)
algae_sem3 <- update(algae_sem2, avg_daily_disch_nr_nrst_gage %~~% avg_canopy_cover)
summary(algae_sem3, conserve = T)
plot(algae_sem3)
out <- coefs(algae_sem3, standardize.type = "latent.linear")
write_csv(out, "algae_sem_output.csv")
# model based on d-sep tests
algae_sem_dsep <- psem(
glmer(trout ~ avg_max_depth + (1|code) + (1|year), df, family = binomial(link = "logit")),
glmer(och ~ trout + avg_max_depth + avg_daily_disch_nr_nrst_gage + avg_canopy_cover + algae_cpom_wet_wt + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(coll_gath ~ och + trout + algae_cpom_wet_wt + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(grazer ~ trout + avg_max_depth + algae_cpom_wet_wt + avg_daily_disch_nr_nrst_gage + avg_canopy_cover + och + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(algae_cpom_wet_wt ~ avg_daily_disch_nr_nrst_gage + avg_canopy_cover + avg_max_depth + trout + (1|code) + (1|year), df, family = poisson(link = "log"))
)
algae_sem_dsep2 <- update(algae_sem_dsep, avg_canopy_cover %~~% avg_max_depth)
algae_sem_dsep3 <- update(algae_sem_dsep2, avg_daily_disch_nr_nrst_gage %~~% avg_canopy_cover)
summary(algae_sem_dsep3, conserve = T)
summary(algae_sem3, conserve = T)
summary(algae_sem_dsep3, conserve = T)
library(piecewiseSEM)
library(tidyverse)
library(lme4)
library(lmerTest)
forround <- c("och", "grazer", "coll_gath", "shredder")
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris %in% c(0), month == 6, year > 2012) %>%
mutate(across(all_of(forround), round, 0))
# the model exactly described by the hypothesized DAG
detrital_sem <- psem(
glmer(trout ~ temp + avg_max_depth + flow + do + (1|code) + (1|year), df, family = binomial(link = "logit")),
lmer(avg_max_depth ~ flow + (1|code) + (1|year), df),
glmer(shredder ~ temp + avg_max_depth + do + leaf_cpom_wet_wt + (1|code) + (1|year), df, family = poisson(link = "log")),
lmer(temp ~ avg_canopy_cover + flow + (1|code) + (1|year), df),
lmer(do ~ flow + temp + (1|code) + (1|year), df),
glmer(leaf_cpom_wet_wt ~ temp + avg_canopy_cover + flow + (1|code) + (1|year), df, family = poisson(link = "log"))
)
summary(detrital_sem, conserve = T)
detrital_sem2 <- update(detrital_sem, avg_max_depth %~~% do)
detrital_sem3 <- update(detrital_sem2, trout %~~% shredder)
detrital_sem4 <- update(detrital_sem3, avg_max_depth %~~% avg_canopy_cover)
summary(detrital_sem4, conserve = T)
detrital_sem_dtest <- psem(
glmer(trout ~ temp + avg_max_depth + flow + do + (1|code) + (1|year), df, family = binomial(link = "logit")),
lmer(avg_max_depth ~ flow + (1|code) + (1|year), df),
glmer(shredder ~ temp + avg_max_depth + do + leaf_cpom_wet_wt + flow + (1|code) + (1|year), df, family = poisson(link = "log")),
lmer(temp ~ avg_canopy_cover + flow + (1|code) + (1|year), df),
lmer(do ~ flow + temp + (1|code) + (1|year), df),
glmer(leaf_cpom_wet_wt ~ temp + avg_canopy_cover + flow + avg_max_depth + (1|code) + (1|year), df, family = poisson(link = "log"))
)
summary(detrital_sem_dtest, conserve = T)
detrital_sem_dtest2 <- update(detrital_sem_dtest, avg_max_depth %~~% do)
detrital_sem_dtest3 <- update(detrital_sem_dtest2, trout %~~% shredder)
detrital_sem_dtest4 <- update(detrital_sem_dtest3, avg_max_depth %~~% avg_canopy_cover)
summary(detrital_sem_dtest4, conserve = T)
detrital_sem_dtest <- psem(
glmer(trout ~ temp + avg_max_depth + flow + do + (1|code) + (1|year), df, family = binomial(link = "logit")),
lmer(avg_max_depth ~ flow + (1|code) + (1|year), df),
glmer(shredder ~ temp + avg_max_depth + do + leaf_cpom_wet_wt + flow + avg_canopy_cover + (1|code) + (1|year), df, family = poisson(link = "log")),
lmer(temp ~ avg_canopy_cover + flow + (1|code) + (1|year), df),
lmer(do ~ flow + temp + (1|code) + (1|year), df),
glmer(leaf_cpom_wet_wt ~ temp + avg_canopy_cover + flow + avg_max_depth + (1|code) + (1|year), df, family = poisson(link = "log"))
)
detrital_sem_dtest2 <- update(detrital_sem_dtest, avg_max_depth %~~% do)
detrital_sem_dtest3 <- update(detrital_sem_dtest2, trout %~~% shredder)
detrital_sem_dtest4 <- update(detrital_sem_dtest3, avg_max_depth %~~% avg_canopy_cover)
summary(detrital_sem_dtest4, conserve = T)
detrital_sem_dtest <- psem(
glmer(trout ~ temp + avg_max_depth + flow + do + (1|code) + (1|year), df, family = binomial(link = "logit")),
lmer(avg_max_depth ~ flow + (1|code) + (1|year), df),
glmer(shredder ~ temp + avg_max_depth + do + leaf_cpom_wet_wt + flow + (1|code) + (1|year), df, family = poisson(link = "log")),
lmer(temp ~ avg_canopy_cover + flow + (1|code) + (1|year), df),
lmer(do ~ flow + temp + (1|code) + (1|year), df),
glmer(leaf_cpom_wet_wt ~ temp + avg_canopy_cover + flow + avg_max_depth + (1|code) + (1|year), df, family = poisson(link = "log"))
)
detrital_sem_dtest2 <- update(detrital_sem_dtest, avg_max_depth %~~% do)
detrital_sem_dtest3 <- update(detrital_sem_dtest2, trout %~~% shredder)
detrital_sem_dtest4 <- update(detrital_sem_dtest3, avg_max_depth %~~% avg_canopy_cover)
summary(detrital_sem_dtest4, conserve = T)
library(piecewiseSEM)
library(tidyverse)
library(lme4)
library(lmerTest)
forround <- c("och", "grazer", "coll_gath", "shredder")
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris %in% c(0), month == 6, year > 2012) %>%
mutate(across(all_of(forround), round, 0))
# Model w/out coll_gath
trout_sem <- psem(
glmer(trout ~ do + temp + flow + avg_daily_disch_nr_nrst_gage + biotic_index + avg_max_depth + (1|code) + (1|year), df, family = binomial(link = "logit")),
lmer(do ~ algae_cpom_wet_wt + temp + flow + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df),
glmer(algae_cpom_wet_wt ~ avg_canopy_cover + flow + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
lmer(biotic_index ~ flow + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df)
)
summary(trout_sem, conserve = T)
# Model w/out coll_gath based on d-sep tests
trout_sem_dsep <- psem(
glmer(trout ~ do + temp + flow + avg_daily_disch_nr_nrst_gage + biotic_index + avg_max_depth + (1|code) + (1|year), df, family = binomial(link = "logit")),
lmer(do ~ algae_cpom_wet_wt + temp + flow + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df),
glmer(algae_cpom_wet_wt ~ avg_canopy_cover + flow + avg_daily_disch_nr_nrst_gage + avg_max_depth + biotic_index + temp +  (1|code) + (1|year), df, family = poisson(link = "log")),
lmer(biotic_index ~ flow + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df)
)
summary(trout_sem_dsep, conserve = T)
source("code/libraries_functions.R")
library(piecewiseSEM)
forround <- c("och", "grazer", "coll_gath", "shredder")
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris %in% c(0), month == 6, year > 2012) %>%
mutate(across(all_of(forround), round, 0))
# model of hypothesized DAG
algae_sem <- psem(
glmer(trout ~ avg_max_depth + (1|code) + (1|year), df, family = binomial(link = "logit")),
glmer(och ~ trout + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(coll_gath ~ och + trout + algae_cpom_wet_wt + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(grazer ~ trout + avg_max_depth + algae_cpom_wet_wt + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(algae_cpom_wet_wt ~ avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log"))
)
algae_sem2 <- update(algae_sem, avg_canopy_cover %~~% avg_max_depth)
algae_sem3 <- update(algae_sem2, avg_daily_disch_nr_nrst_gage %~~% avg_canopy_cover)
summary(algae_sem3, conserve = T)
df
head(df)
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris == 0, month == 6, year > 2012) %>%
mutate(across(all_of(forround), round, 0))
# model of hypothesized DAG
algae_sem <- psem(
glmer(trout ~ avg_max_depth + (1|code) + (1|year), df, family = binomial(link = "logit")),
glmer(och ~ trout + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(coll_gath ~ och + trout + algae_cpom_wet_wt + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(grazer ~ trout + avg_max_depth + algae_cpom_wet_wt + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(algae_cpom_wet_wt ~ avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log"))
)
algae_sem2 <- update(algae_sem, avg_canopy_cover %~~% avg_max_depth)
algae_sem3 <- update(algae_sem2, avg_daily_disch_nr_nrst_gage %~~% avg_canopy_cover)
summary(algae_sem3, conserve = T)
names(df)
summary(algae_sem)
summary(algae_sem, conserve = T )
summary(algae_sem, conserve = T)
plot(algae_sem)
out <- coefs(algae_sem3, standardize.type = "latent.linear")
write_csv(out, "algae_sem_output.csv")
out <- coefs(algae_sem, standardize.type = "latent.linear")
write_csv(out, "algae_sem_output.csv")
algae_sem_dsep <- psem(
glmer(trout ~ avg_max_depth + (1|code) + (1|year), df, family = binomial(link = "logit")),
glmer(och ~ trout + algae_cpom_wet_wt + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(coll_gath ~ och + trout + algae_cpom_wet_wt + avg_max_depth + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(grazer ~ trout + och + avg_max_depth + algae_cpom_wet_wt + avg_daily_disch_nr_nrst_gage + (1|code) + (1|year), df, family = poisson(link = "log")),
glmer(algae_cpom_wet_wt ~ avg_daily_disch_nr_nrst_gage + avg_max_depth + trout + (1|code) + (1|year), df, family = poisson(link = "log"))
)
summary(algae_sem_dsep, conserve = T)
plot(algae_sem_dsep)
out3 <- coefs(algae_sem_dsep3, standardize.type = "latent.linear")
out3 <- coefs(algae_sem_dsep, standardize.type = "latent.linear")
write_csv(out3, "algae_sem_output_dsep.csv")
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris %in% c(0), month == 6, year > 2012) %>%
mutate(across(all_of(forround), round, 0))
names(df)
drivers <- df[, names(df) %in% c("temp", "do", "avg_max_depth", "flow", "avg_daily_disch_nr_nrst_gage", "preceding_yr_dry_duration_ys") == T]
psych::cor.plot(drivers) # lots of colinearity
psych::cor.plot(drivers)
psych::pairs.panels(select(drivers, -c(flow, leaf_cpom_wet_wt)))
psych::pairs.panels(select(drivers, -c(flow)))
df <- df %>%
mutate(trout.binomial = ifelse(trout == "absent", 0, 1))
lm1 <- lm(avg_canopy_cover ~ temp, t)
lm1 <- lm(avg_canopy_cover ~ temp, df)
df$res_canopy <- residuals(lm1) # The effects of canopy cover after accounting for temp.
lm2 <- lm(conductivity ~ temp + do, df)
summary(lm2)
df$res_conductivity <- residuals(lm2) # The effects of conductivity after accounting for temp.
lm3 <- lm(avg_daily_disch_nr_nrst_gage ~ do, df)
summary(lm3)
df$res_discharge <- residuals(lm3)
psych::pairs.panels(df[names(df) %in% c("avg_max_depth", "temp", "do", "res_canopy", "res_conductivity", "res_discharge") == T])
library(glmmTMB)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), t, family = "binomial")
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), df, family = "binomial")
summary(effects_on_trout)
psych::cor.plot(drivers)
lm1 <- lm(avg_canopy_cover ~ temp, df)
df$res_canopy <- residuals(lm1) # The effects of canopy cover after accounting for temp.
lm2 <- lm(conductivity ~ temp + do, df)
summary(lm2)
df$res_conductivity <- residuals(lm2) # The effects of conductivity after accounting for temp.
lm3 <- lm(avg_daily_disch_nr_nrst_gage ~ do, df)
summary(lm3)
df$res_discharge <- residuals(lm3)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), df, family = "binomial")
drivers <- df[, names(df) %in% c("temp", "do", "avg_max_depth", "flow", "avg_daily_disch_nr_nrst_gage", "preceding_yr_dry_duration_ys", "avg_canopy_cover") == T]
psych::cor.plot(drivers) # lots of colinearity
psych::pairs.panels(select(drivers, -c(flow)))
lm1 <- lm(avg_canopy_cover ~ temp, df)
summary(lm1)
png("figures/correlogram.png")
psych::cor.plot(drivers)
dev.off()
psych::pairs.panels(select(drivers, -c(flow)))
hist(df$avg_canopy_cover)
plot(avg_canopy_cover ~ avg_max_depth, df)
plot(avg_max_depth ~ avg_canopy_cover, df)
plot(trout ~ avg_max_depth, df)
hist(df$avg_max_depth)
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris %in% c(0), month == 6) %>%
mutate(across(all_of(forround), round, 0))
drivers <- df[, names(df) %in% c("temp", "do", "avg_max_depth", "flow", "avg_daily_disch_nr_nrst_gage", "preceding_yr_dry_duration_ys", "avg_canopy_cover") == T]
psych::cor.plot(drivers) # lots of colinearity
psych::pairs.panels(select(drivers, -c(flow)))
df <- df %>%
mutate(trout.binomial = ifelse(trout == "absent", 0, 1))
lm1 <- lm(avg_canopy_cover ~ temp, df)
df$res_canopy <- residuals(lm1) # The effects of canopy cover after accounting for temp.
lm2 <- lm(conductivity ~ temp + do, df)
summary(lm2)
df$res_conductivity <- residuals(lm2) # The effects of conductivity after accounting for temp.
lm3 <- lm(avg_daily_disch_nr_nrst_gage ~ do, df)
summary(lm3)
df$res_discharge <- residuals(lm3)
psych::pairs.panels(df[names(df) %in% c("avg_max_depth", "temp", "do", "res_canopy", "res_conductivity", "res_discharge") == T])
library(glmmTMB)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), df, family = "binomial")
summary(effects_on_trout)
vignette('troubleshooting')
vignette("glmmTMB", "troubleshooting")
vignette(troubleshooting", glmmTMB)
)
vignette(troubleshooting", "glmmTMB")
vignette("troubleshooting", "glmmTMB")
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), df, family = "binomial", control=glmmTMBControl(optimizer=optim, optArgs=list(method="BFGS")))
summary(effects_on_trout)
psych::pairs.panels(df[names(df) %in% c("avg_max_depth", "temp", "do", "res_canopy", "res_conductivity", "res_discharge") == T])
psych::pairs.panels(drivers)
drivers <- df[, names(df) %in% c("temp", "do", "avg_max_depth", "avg_daily_disch_nr_nrst_gage", "avg_canopy_cover") == T]
psych::cor.plot(drivers) # lots of colinearity
psych::pairs.panels(drivers)
?vif
vif(effects_on_trout)
car::vif(effects_on_trout)
names(drivers)
mod1 <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(avg_canopy_cover) + scale(avg_daily_disch_nr_nrst_gage) + (1|code) + (1|year), df, family = "binomial")
vignette("troubleshooting", "glmmTMB")
glm1 <- glm(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(avg_canopy_cover) + scale(avg_daily_disch_nr_nrst_gage), df, family = "binomial")
summary(glm1)
summary(df$trout.binomial)
df$trout.binomial
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris %in% c(0), month == 6) %>%
mutate(across(all_of(forround), round, 0))
drivers <- df[, names(df) %in% c("temp", "do", "avg_max_depth", "avg_daily_disch_nr_nrst_gage", "avg_canopy_cover") == T]
psych::pairs.panels(drivers)
lm1 <- lm(avg_canopy_cover ~ temp, df)
df$res_canopy <- residuals(lm1) # The effects of canopy cover after accounting for temp.
lm2 <- lm(conductivity ~ temp + do, df)
summary(lm2)
df$res_conductivity <- residuals(lm2) # The effects of conductivity after accounting for temp.
lm3 <- lm(avg_daily_disch_nr_nrst_gage ~ do, df)
summary(lm3)
df$res_discharge <- residuals(lm3)
psych::pairs.panels(df[names(df) %in% c("avg_max_depth", "temp", "do", "res_canopy", "res_conductivity", "res_discharge") == T])
glm1 <- glm(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(avg_canopy_cover) + scale(avg_daily_disch_nr_nrst_gage), df, family = "binomial")
mod1 <- glmmTMB::glmmTMB(trout ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(avg_canopy_cover) + scale(avg_daily_disch_nr_nrst_gage) + (1|code) + (1|year), df, family = "binomial")
summary(mod1)
glm1 <- glm(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(avg_canopy_cover) + scale(avg_daily_disch_nr_nrst_gage), df, family = "binomial")
glm1 <- glm(trout ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(avg_canopy_cover) + scale(avg_daily_disch_nr_nrst_gage), df, family = "binomial")
summary(glm1)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), df, family = "binomial", control=glmmTMBControl(optimizer=optim, optArgs=list(method="BFGS")))
effects_on_trout <- glmmTMB::glmmTMB(trout ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), df, family = "binomial", control=glmmTMBControl(optimizer=optim, optArgs=list(method="BFGS")))
effects_on_trout <- glmmTMB::glmmTMB(trout ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), df, family = "binomial")
summary(effects_on_trout)
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity)" ~ "Conductivity (res. temp + do)",
term == "scale(res_discharge)" ~ "Discharge (res. do)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity)" ~ "Conductivity (res. temp + do)",
term == "scale(res_discharge)" ~ "Discharge (res. do)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
vec <- seq(min(df$avg_max_depth), max(df$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(df, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence")
cowplot::plot_grid(p1, p2, rel_widths = c(0.5, 1))
p2 <- ggplot(df, aes(x = avg_max_depth, y = trout))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence")
cowplot::plot_grid(p1, p2, rel_widths = c(0.5, 1))
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity)" ~ "Conductivity (res. temp + do)",
term == "scale(res_discharge)" ~ "Discharge (res. do)")) %>%
filter(term != "Intercept") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
vec <- seq(min(df$avg_max_depth), max(df$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(df, aes(x = avg_max_depth, y = trout))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence")
cowplot::plot_grid(p1, p2, rel_widths = c(0.5, 1))
hist(df$avg_max_depth)
install.packages("performance")
install.packages("performance")
library(performance)
?check_collinearity
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris %in% c(0), month == 6) %>%
mutate(across(all_of(forround), round, 0))
drivers <- df[, names(df) %in% c("temp", "do", "avg_max_depth", "avg_daily_disch_nr_nrst_gage", "avg_canopy_cover") == T]
psych::pairs.panels(drivers)
lm1 <- lm(avg_canopy_cover ~ temp, df)
df$res_canopy <- residuals(lm1) # The effects of canopy cover after accounting for temp.
lm2 <- lm(conductivity ~ temp + do, df)
summary(lm2)
df$res_conductivity <- residuals(lm2) # The effects of conductivity after accounting for temp.
lm3 <- lm(avg_daily_disch_nr_nrst_gage ~ do, df)
summary(lm3)
df$res_discharge <- residuals(lm3)
psych::pairs.panels(df[names(df) %in% c("avg_max_depth", "temp", "do", "res_canopy", "res_conductivity", "res_discharge") == T])
library(glmmTMB)
effects_on_trout <- glmmTMB::glmmTMB(trout ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), df, family = "binomial")
summary(effects_on_trout)
performance::check_collinearity(effects_on_trout)
m1 <- glmmTMB::glmmTMB(trout ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(avg_canopy_cover) + scale(conductivity) + scale(avg_daily_disch_nr_nrst_gage) + (1|code) + (1|year), df, family = "binomial")
summary(m1)
performance::check_collinearity(m1)
p1 <- tidy(m1, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(avg_canopy_cover)" ~ "Canopy",
term == "scale(conductivity)" ~ "Conductivity",
term == "scale(avg_daily_disch_nr_nrst_gage)" ~ "Discharge")) %>%
filter(term != "Intercept") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
source("code/libraries_functions.R")
p1 <- tidy(m1, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(avg_canopy_cover)" ~ "Canopy",
term == "scale(conductivity)" ~ "Conductivity",
term == "scale(avg_daily_disch_nr_nrst_gage)" ~ "Discharge")) %>%
filter(term != "Intercept") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
vec <- seq(min(df$avg_max_depth), max(df$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
pred_trout <- as.data.frame(ggpredict(m1, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(df, aes(x = avg_max_depth, y = trout))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence")
cowplot::plot_grid(p1, p2, rel_widths = c(0.5, 1))
ggsave("figures/effects_on_trout.png", device = "png")
drivers <- df[, names(df) %in% c("temp", "do", "avg_max_depth", "avg_daily_disch_nr_nrst_gage", "avg_canopy_cover", "conductivity") == T]
drivers <- df[, names(df) %in% c("temp", "do", "avg_max_depth", "avg_daily_disch_nr_nrst_gage", "avg_canopy_cover", "conductivity") == T]
psych::pairs.panels(drivers)
# Environmental effects on trout
source("code/libraries_functions.R")
df <- read.csv("data/raw/raw_220315.csv") %>% janitor::clean_names() %>%
filter(burn_debris %in% c(0), month == 6) %>%
mutate(across(all_of(forround), round, 0))
drivers <- df[, names(df) %in% c("temp", "do", "avg_max_depth", "avg_daily_disch_nr_nrst_gage", "avg_canopy_cover", "conductivity") == T]
psych::pairs.panels(drivers)
library(glmmTMB)
m1 <- glmmTMB::glmmTMB(trout ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(avg_canopy_cover) + scale(conductivity) + scale(avg_daily_disch_nr_nrst_gage) + (1|code) + (1|year), df, family = "binomial")
summary(m1)
performance::check_collinearity(m1)
p1 <- tidy(m1, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(avg_canopy_cover)" ~ "Canopy",
term == "scale(conductivity)" ~ "Conductivity",
term == "scale(avg_daily_disch_nr_nrst_gage)" ~ "Discharge")) %>%
filter(term != "Intercept") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
vec <- seq(min(df$avg_max_depth), max(df$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(m1, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(df, aes(x = avg_max_depth, y = trout))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence")
cowplot::plot_grid(p1, p2, rel_widths = c(0.5, 1))
ggsave("figures/effects_on_trout.png", device = "png")
tidy(m1, conf.int = T)
pred_trout
