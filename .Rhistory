if(y %in% c("mollusks", "no_wings", "turbellaria") == T){
mod.temp = q.glmer(form, data[data$burn_debris != "bdf", ], family = "poisson")
mod.df = tidy(mod.temp$result) %>%
mutate(response = y, .before = effect) %>%
mutate(warning = ifelse(length(mod.temp$warnings) == 0, "NO", mod.temp$warnings), .after = p.value)
mod.df
} else {
if(is.integer(data[,y]) == T){ # this just fits a poisson glmer if the repsonse is integer data, but a linear mixed effects model if the response is non-integer
mod.temp = q.glmer(form, data, family = "poisson")
mod.df = tidy(mod.temp$result) %>%
mutate(response = y, .before = effect) %>%
mutate(warning = ifelse(length(mod.temp$warnings) == 0, "NO", mod.temp$warnings), .after = p.value)
mod.df
} else{
mod.temp = q.lmer(form, data)
mod.df = tidy(mod.temp$result) %>%
mutate(response = y, .before = effect) %>%
mutate(warning = ifelse(length(mod.temp$warnings) == 0, "NO", mod.temp$warnings), .after = p.value)
mod.df
}}
}
# test it
mod.function(y = "mollusks", data = df) # works!
tidy(mod.sample, effects = "fixed") %>% mutate(response = "total_insects", .before = effect)
mod.function(y = "temp", data = df) # works!
mod.predict <- function(y, data){
response = as.name(y)
form = substitute(response ~ burn_debris + scale(avg_daily_disch_nr_nrst_gage) + scale(preceding_yr_dry_duration_ys) + trout + (1|code) + (1|year)) # model form
if(y %in% c("mollusks", "no_wings", "turbellaria") == T){
# run the model
mod.temp = q.glmer(form, data[data$burn_debris != "bdf", ], family = "poisson")
# estimate post hoc comparisons
post.hoc = summary(glht(mod.temp$result, mcp(burn_debris=c("brb - un = 0",
"bri - un = 0"))))
df.post = data.frame(response = y,
x = c("brb", "bri"),
comparison = names(post.hoc$test$coefficients),
difference = post.hoc$test$coefficients,
pvalue = round(post.hoc$test$pvalues,8)
)
dummy.row <- data.frame(response = y, x = "bdf", predicted = 0, std.error = NA,
conf.low = NA, conf.high = NA, group = as.factor("1"), warning = "NO", comparison = "NA", difference = NA, pvalue = NA)
# run the model predictions and join the posthoc comparisons
ggpredict(mod.temp$result, terms = ~ burn_debris) %>%
as.data.frame() %>%
mutate(response = y, .before = x) %>%
mutate(warning = ifelse(length(mod.temp$warnings) == 0, "NO", mod.temp$warnings), .after = group) %>%
left_join(df.post) %>%
bind_rows(dummy.row)
} else{
if(is.integer(data[,y]) == T ){ # this just fits a poisson glmer if the response is integer data, but a linear mixed effects model if the response is non-integer
# run the model
mod.temp = q.glmer(form, data, family = "poisson")
# estimate post hoc comparisons
post.hoc = summary(glht(mod.temp$result, mcp(burn_debris=c("bdf - un = 0",
"brb - un = 0",
"bri - un = 0"))))
df.post = data.frame(response = y,
x = c("bdf", "brb", "bri"),
comparison = names(post.hoc$test$coefficients),
difference = post.hoc$test$coefficients,
pvalue = round(post.hoc$test$pvalues,8)
)
# run the model predictions and join the posthoc comparisons
ggpredict(mod.temp$result, terms = ~ burn_debris) %>%
as.data.frame() %>%
mutate(response = y, .before = x) %>%
mutate(warning = ifelse(length(mod.temp$warnings) == 0, "NO", mod.temp$warnings), .after = group) %>%
left_join(df.post)
} else{
# run the model
mod.temp = q.lmer(form, data)
# estimate post hoc comparisons
post.hoc = summary(glht(mod.temp$result, mcp(burn_debris=c("bdf - un = 0",
"brb - un = 0",
"bri - un = 0"))))
df.post = data.frame(response = y,
x = c("bdf", "brb", "bri"),
comparison = names(post.hoc$test$coefficients),
difference = post.hoc$test$coefficients,
pvalue = round(post.hoc$test$pvalues,8)
)
ggpredict(mod.temp$result, terms = ~ burn_debris) %>%
as.data.frame() %>%
mutate(response = y, .before = x) %>%
mutate(warning = ifelse(length(mod.temp$warnings) == 0, "NO", mod.temp$warnings), .after = group) %>%
left_join(df.post)
}}
}
# test it
mod.predict(y = "turbellaria", data = df) # works!
as.data.frame(ggpredict(mod.sample, terms = ~burn_debris))
#---------------------------------------------------------------
## Apply model to all responses
#---------------------------------------------------------------
model_sum <- map_dfr(unlist(responses, use.names = F), mod.function, data = df) %>%
mutate(sig = ifelse(p.value < 0.05 & p.value > 0.01, "*",
ifelse(p.value < 0.01 & p.value > 0.001, "**",
ifelse(p.value <= 0.001, "***", "NS"))))
ms <- model_sum %>%
mutate(response_cat = case_when(
response %in% responses[[1]] ~ "Environmental",
response %in% responses[[2]] ~ "Indices",
response %in% responses[[3]] ~ "Taxonomic",
response %in% responses[[4]] ~ "Functional groups",
response %in% responses[[5]] ~ "Traits"
)) %>%
filter(term == "scale(avg_daily_disch_nr_nrst_gage)" | term == "scale(preceding_yr_dry_duration_ys)") %>%
mutate(term = case_when(
term == "scale(avg_daily_disch_nr_nrst_gage)" ~ "Average daily discharge",
term == "scale(preceding_yr_dry_duration_ys)" ~ "Drying index"
)) %>%
mutate(estimate = ifelse(warning == "NO", estimate, NA))
model_predictions <- map_dfr(unlist(responses, use.names = F), mod.predict, data = df)
mp <- model_predictions %>%
rename(burn_debris = x) %>%
dplyr::select(-c(group)) %>%
mutate(response_cat = case_when(
response %in% responses[[1]] ~ "Environmental",
response %in% responses[[2]] ~ "Indices",
response %in% responses[[3]] ~ "Taxonomic",
response %in% responses[[4]] ~ "Functional groups",
response %in% responses[[5]] ~ "Traits"
)) %>%
mutate(predicted = ifelse(warning == "NO", predicted, NA)) %>%
group_by(response_cat, response) %>%
mutate(across(.cols = c(predicted, conf.low, conf.high), ~. - first(.))) %>%
filter(burn_debris != "un")
#---------------------------------------------------------------
## Plot it up
#---------------------------------------------------------------
# Conditional effects plots of burn status, holding continuous predictors at their mean, and assuming trout absent. Plots are conditional mean and 95% confidence intervals at the population-level of the random effect.
mp %>%
mutate(sig = ifelse(pvalue < 0.05, "significant", "NS")) %>%
filter(response_cat == "Environmental") %>%
ggplot(aes(x = burn_debris, y = predicted))+
geom_pointrange(aes(color = burn_debris, ymin = conf.low, ymax = conf.high, fill = sig), position = position_dodge(width = 0.5), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
geom_hline(yintercept = 0, linetype = 4)+
coord_flip()+
facet_wrap(~response, scales = "free") +
labs(y = "Conditional mean difference\nfrom unburned streams", x = "Burn status", title = "Environmental reponses")+
cowplot::theme_cowplot()
ggsave("figures/environmental.png", device = "png")
mp %>%
mutate(sig = ifelse(pvalue < 0.05, "significant", "NS")) %>%
filter(response_cat == "Indices") %>%
ggplot(aes(x = burn_debris, y = predicted))+
geom_pointrange(aes(color = burn_debris, ymin = conf.low, ymax = conf.high, fill = sig), position = position_dodge(width = 0.5), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
facet_wrap(~response, scales = "free", ncol = 3) +
labs(y = "Conditional mean difference\nfrom unburned streams", x = "Burn status", title = "Aggregate reponses")+
cowplot::theme_cowplot()
ggsave("figures/total_indices.png", device = "png")
mp %>%
mutate(sig = ifelse(pvalue < 0.05, "significant", "NS")) %>%
filter(response_cat == "Taxonomic") %>%
ggplot(aes(x = burn_debris, y = predicted))+
geom_pointrange(aes(color = burn_debris, ymin = conf.low, ymax = conf.high, fill = sig), position = position_dodge(width = 0.5), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
facet_wrap(~response, scales = "free", ncol = 3) +
labs(y = "Conditional mean difference\nfrom unburned streams", x = "Burn status", title = "Taxonomic reponses")+
cowplot::theme_cowplot()
ggsave("figures/taxonomic.png", device = "png")
mp %>%
mutate(sig = ifelse(pvalue < 0.05, "significant", "NS")) %>%
filter(response_cat == "Functional groups") %>%
ggplot(aes(x = burn_debris, y = predicted))+
geom_pointrange(aes(color = burn_debris, ymin = conf.low, ymax = conf.high, fill = sig), position = position_dodge(width = 0.5), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
facet_wrap(~response, scales = "free") +
labs(y = "Conditional mean difference\nfrom unburned streams", x = "Burn status", title = "Functional group reponses")+
cowplot::theme_cowplot()
ggsave("figures/functional_groups.png", device = "png")
mp %>%
mutate(sig = ifelse(pvalue < 0.05, "significant", "NS")) %>%
filter(response_cat == "Traits") %>%
ggplot(aes(x = burn_debris, y = predicted))+
geom_pointrange(aes(color = burn_debris, ymin = conf.low, ymax = conf.high, fill = sig), position = position_dodge(width = 0.5), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
facet_wrap(~response, scales = "free") +
labs(y = "Conditional mean difference\nfrom unburned streams", x = "Burn status", title = "Trait indices")+
cowplot::theme_cowplot()
ggsave("figures/trait.png", device = "png")
# Plots for the effect size of the continuous predictors on each response variable.
ms %>% mutate(sig.col = ifelse(p.value >= 0.05, "NS", "S")) %>%
group_by(term) %>%
mutate(response_ordered = forcats::fct_reorder(response, estimate)) %>%
ggplot(aes(x = response_ordered, y = estimate))+
geom_hline(yintercept = 0, lty = 5, color = "gray")+
geom_pointrange(aes(ymax = estimate + std.error,
ymin = estimate - std.error, fill = sig.col), pch = 21, show.legend = F)+
scale_fill_manual(values = c(alpha("gray", 0), "black")) +
coord_flip()+
facet_wrap(response_cat ~ term, scales = "free", ncol = 2)+
labs(x = "", y = "Effect size")+
cowplot::theme_cowplot()
ggsave("figures/continuous_predictor_effects.png", device = "png", width = 15, height = 20)
?glht
?mcp
temp <- summary(glht(mod.sample, mcp(burn_debris = c("bdf - un = 0",
"brb - un = 0",
"bri - un = 0" ))))
temp
?p.adjust
df %>%
select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath)
names(df)
df %>%
select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath)
df %>%
dplry::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath)
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath)
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(value = mean(value),
se = se(value))
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(value = mean(value),
se = sd(value)/n())
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(mean_value = mean(value),
se = sd(value)/n())
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(mean_value = mean(value),
se = sd(value)/n())+
ggplot(aes(x = year, y = mean_value))+
geom_line(aes(color = burn_debris))+
facet_wrap(~name, ncol = 1)
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(mean_value = mean(value),
se = sd(value)/n()) %>%
ggplot(aes(x = year, y = mean_value))+
geom_line(aes(color = burn_debris))+
facet_wrap(~name, ncol = 1)
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(mean_value = mean(value),
se = sd(value)/n()) %>%
ggplot(aes(x = year, y = mean_value))+
geom_line(aes(color = burn_debris))+
facet_wrap(~name, ncol = 1, scales = "free")
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(mean_value = mean(value),
se = sd(value)/n()) %>%
ggplot(aes(x = year, y = mean_value))+
geom_line(aes(color = burn_debris))+
geom_point(aes(color = burn_debris))+
geom_errorbar(aes(color = burn_debris, ymin = mean_value - se, ymax = mean_value + se))+
facet_wrap(~name, ncol = 1, scales = "free")
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(mean_value = mean(value),
se = sd(value)/n()) %>%
ggplot(aes(x = year, y = mean_value))+
geom_line(aes(color = burn_debris))+
geom_point(aes(color = burn_debris))+
geom_linerange(aes(color = burn_debris, ymin = mean_value - se, ymax = mean_value + se))+
facet_wrap(~name, ncol = 1, scales = "free")
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(mean_value = mean(value),
se = sd(value)/n()) %>%
ggplot(aes(x = year, y = mean_value))+
geom_line(aes(color = burn_debris))+
geom_point(aes(color = burn_debris))+
geom_linerange(aes(color = burn_debris, ymin = mean_value - se, ymax = mean_value + se))+
facet_wrap(~name, ncol = 1, scales = "free")+
cowplot::theme_cowplot()
ggsave("figures/timeseries.png", device = "png", width = 6, height = 36)
ggsave("figures/timeseries.png", device = "png", width = 6, height = 18)
df %>%
dplyr::select(code, year, burn_debris, biotic_index, thermal_index, shredder, grazer, predator, coll_gath) %>%
pivot_longer(cols = biotic_index:coll_gath) %>%
group_by(year, burn_debris, name) %>%
summarize(mean_value = mean(value),
se = sd(value)/n()) %>%
ggplot(aes(x = year, y = mean_value))+
geom_line(aes(color = burn_debris))+
geom_point(aes(color = burn_debris))+
geom_linerange(aes(color = burn_debris, ymin = mean_value - se, ymax = mean_value + se))+
facet_wrap(~name, ncol = 2, scales = "free")+
cowplot::theme_cowplot()
ggsave("figures/timeseries.png", device = "png", width = 6, height = 18)
ggsave("figures/timeseries.png", device = "png", width = 8, height = 16)
ggsave("figures/timeseries.png", device = "png", width = 8, height = 8*1.66)
library(vegan)
source("code/libraries_functions.R")
source("code/clean_data.R")
c.mat <- df[names(df) %in% responses$taxomonic, ]
c.mat
c.mat <- df[, names(df) %in% responses$taxomonic]
c.mat
df <- df %>% drop_na(burn_debris)
c.mat <- df[, names(df) %in% responses$taxomonic]
c.mat
c.mat <- df[, names(df) %in% responses$taxomonic] %>% as.matrix()
c.at
c.mat
str(c.mat)
meta <- df[, c("code", "year")]
meta
meta <- df[, c("code", "year", "trout", "burn_debris")]
e.mat <- df[, names(df) %in% responses$environmental]
e.mat
meta <- df[, c("code", "year")]
e.mat <- df[, names(df) %in% c("trout", "burn_debris", responses$environmental)]
e.mat
head(e.mat)
?nmds
?vegan::metaMDS
nmds <- metaMDS(c.matt)
nmds <- metaMDS(c.mat)
plot(nmds)
summary(nmds)
nmds
nmds$points
str(nmds)
nmds$species
mds <- df[, names(df) %in% c("code", "year", "trout", "burn_debris", responses$environmental)]
mds$points <- nmds$points
mds
head(mds)
mds <- df[, names(df) %in% c("code", "year", "trout", "burn_debris", responses$environmental)]
mds$mds1 <- nmds$points[,1]
mds$mds2 <- nmds$points[,2]
ggplot(mds, aes(x = mds1, mds2))+
geom_point()
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(color = burn_debris))+
facet_wrap(~code)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(color = burn_debris))+
facet_wrap(~code, scales = "free")
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(color = burn_debris))+
facet_wrap(~code)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(color = burn_debris))+
geom_path(aes(color = year))+
facet_wrap(~code)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(color = burn_debris))+
geom_path(aes(color = as.numeric(year)))+
facet_wrap(~code)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(color = burn_debris))+
geom_path(aes(fill = as.numeric(year)))+
facet_wrap(~code)
?geom_path
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(color = burn_debris))+
geom_path(aes(color = as.numeric(year)))+
facet_wrap(~code)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(color = burn_debris))+
geom_path(aes(color = as.factor(year)))+
facet_wrap(~code)
geom_point(aes(shape = burn_debris)+
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(shape = burn_debris))+
geom_path(aes(color = as.numeric(year)))+
facet_wrap(~code)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(shape = burn_debris))+
geom_path(aes(color = as.numeric(year)))+
facet_wrap(~code)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(shape = burn_debris, fill = burn_debris))+
geom_path(aes(color = as.numeric(year)))+
facet_wrap(~code)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(fill = burn_debris), pch = 21, size = 4)+
geom_path(aes(color = as.numeric(year)))+
facet_wrap(~code)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_path(aes(color = as.numeric(year)))+
facet_wrap(~code)+
cowplot::theme_cowplot()
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
cowplot::theme_cowplot()
ordiplot(nmds)
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
cowplot::theme_cowplot()
ordihull(nmds)
ordihull(nmds, groups = "burn_debris")
ordihull(nmds, groups = e.mat$burn_debris)
?ordihull
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_path(aes(color = as.numeric(year)))+
facet_wrap(~code)+
cowplot::theme_cowplot()
ggplot(mds, aes(x = mds1, mds2))+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_path(aes(color = as.numeric(year)), lwd = 1.5)+
facet_wrap(~code)+
cowplot::theme_cowplot()
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
facet_wrap(~code)+
cowplot::theme_cowplot()
nmds$species
species <- data.frame(species = rownames(nmds$species), mds1 = nmds$species[,1], mds2 = nmds$species[,2])
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_points(data = species, aes(x = MDS1, y = MDS2, shape = species))+
facet_wrap(~code)+
cowplot::theme_cowplot()
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_point(data = species, aes(x = MDS1, y = MDS2, shape = species))+
facet_wrap(~code)+
cowplot::theme_cowplot()
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_point(data = species, aes(x = mds1, y = mds2, shape = species))+
facet_wrap(~code)+
cowplot::theme_cowplot()
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_text(data = species, aes(x = mds1, y = mds2))+
facet_wrap(~code)+
cowplot::theme_cowplot()
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_text(data = species, aes(x = mds1, y = mds2, label = as.numeric(species)))+
facet_wrap(~code)+
cowplot::theme_cowplot()
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_text(data = species, aes(x = mds1, y = mds2, label = as.numeric(as.factor(species))))+
facet_wrap(~code)+
cowplot::theme_cowplot()
cbind(species$species, as.numeric(as.factor(species$species)))
order(cbind(species$species, as.numeric(as.factor(species$species))))
arrange(as.data.frame(cbind(species$species, as.numeric(as.factor(species$species))),
)
)
arrange(as.data.frame(cbind(species$species, as.numeric(as.factor(species$species)))), V2)
sink("figures/table.txt")
arrange(as.data.frame(cbind(species$species, as.numeric(as.factor(species$species)))), V2)
sink()
print(cars)
plot(cars)
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_text(data = species, aes(x = mds1, y = mds2, label = as.numeric(as.factor(species))))+
facet_wrap(~code)+
cowplot::theme_cowplot()
ggsave("figures/nmds_bysite.png", device = "png", width = 14, height = 12 )
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_text(data = species, aes(x = mds1, y = mds2, label = as.numeric(as.factor(species))))+
facet_wrap(~code)+
labels(color = "Year", fill = "Burn status")+
cowplot::theme_cowplot()
ggplot(mds, aes(x = mds1, mds2))+
geom_path(aes(color = as.numeric(year)), lwd = 1.25)+
geom_point(aes(fill = burn_debris), pch = 21, size = 3)+
geom_text(data = species, aes(x = mds1, y = mds2, label = as.numeric(as.factor(species))))+
facet_wrap(~code)+
labs(color = "Year", fill = "Burn status")+
cowplot::theme_cowplot()
ggsave("figures/nmds_bysite.png", device = "png", width = 14, height = 12 )
