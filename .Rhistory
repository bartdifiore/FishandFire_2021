psych::cor.plot(drivers) # lots of colinearity
png("figures/correlogram.png")
psych::cor.plot(drivers)
dev.off()
psych::pairs.panels(drivers)
t <- t %>%
mutate(trout.binomial = ifelse(trout == "absent", 0, 1))
plot(ggpredict(effects_on_trout))
t <- t %>%
mutate(trout.binomial = ifelse(trout == "absent", 0, 1))
lm1 <- lm(temp ~ avg_canopy_cover + do, t)
t$res_do_canopy <- residuals(lm1) # The effects of temperature after accounting for dissolved oxygen and canopy cover
effects_on_trout <- glmer(trout.binomial ~ scale(avg_max_depth) * scale(res_do_canopy) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
plot(ggpredict(effects_on_trout))
tidy(effects_on_trout)
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(ymin = estimate - std. error, ymax = estimate + std.error))
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(ymin = estimate - std. error, ymax = estimate + std.error))
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std. error, ymax = estimate + std.error))
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))+
coord_flip()+
theme_classic()
summary(effects_on_trout)
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))+
coord_flip()+
geom_vline(xintercept = 0, lwd = 4)
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))+
coord_flip()+
geom_vline(xintercept = 0, lwd = 4)+
theme_classic()
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))+
coord_flip()+
geom_hline(xintercept = 0, lwd = 4)+
theme_classic()
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))+
coord_flip()+
geom_hline(yintercept = 0, lwd = 4)+
theme_classic()
tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
p1 <- tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
cowplot::theme_cowplot()+
labs(x = "Average max depth (units)", y = "Trout presence / absence")
cowplot::plot_grid(p1, p2)
p1 <- tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(pvalue < 0.05, "significant", "NS")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error, fill = sig), pch = 21)+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
tidy(effects_on_trout)
p1 <- tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error, fill = sig), pch = 21)+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
p1
p1 <- tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
p1
psych::pairs.panels(drivers)
lm1 <- lm(temp ~ avg_canopy_cover, t)
t$res_do_canopy <- residuals(lm1) # The effects of temperature after accounting for the effects of dissolved oxygen and canopy cover
effects_on_trout <- glmer(trout.binomial ~ scale(avg_max_depth) * scale(res_do_canopy) + scale(do) + (1|code) + (1|year), t, family = "binomial")
t$do
plot(trout.binomial ~ do, t)
plot(as.factor(trout.binomial) ~ do, t)
str(t$trout.binomial)
plot(as.factor(trout) ~ do, t)
plot(trout ~ do, t)
effects_on_trout <- glmer(trout.binomial ~ scale(avg_max_depth) * scale(res_do_canopy) + scale(do) + (1|code) + (1|year), t, family = "negbinomial")
psych::pairs.panels(drivers)
lm2 <- lm(avg_max_depth ~ flow, t)
summary(lm2)
effects_on_trout <- glmer(trout.binomial ~ scale(res_avg_max_depth) * scale(res_temp) + scale(avg_canopy_cover) + scale(flow) + (1|code) + (1|year), t, family = "binomial")
lm2 <- lm(avg_max_depth ~ flow, t)
summary(lm2)
t$res_avg_max_depth <- residuals(lm2) # The effect of depth after accounting for flow.
lm2 <- lm(avg_max_depth ~ flow, t)
t$res_avg_max_depth <- residuals(lm2) # The effect of depth after accounting for flow.
residuals(lm2)
t$flow
drivers
psych::pairs.panels(drivers[,!("flow", "leaf_cpom_wet_wt")])
psych::pairs.panels(drivers[,!c("flow", "leaf_cpom_wet_wt")])
psych::pairs.panels(drivers![,c("flow", "leaf_cpom_wet_wt")])
psych::pairs.panels(drivers[,c("flow", "leaf_cpom_wet_wt")])
psych::pairs.panels(drivers[,-c("flow", "leaf_cpom_wet_wt")])
psych::pairs.panels(drivers[,!c("flow", "leaf_cpom_wet_wt")])
psych::pairs.panels(select(drivers, -c(flow, leaf_cpom_wet_wt)))
lm1 <- lm(avg_canopy_cover ~ temp, t)
t$res_temp <- residuals(lm1) # The effects of canopy cover after accounting for temp.
lm2 <- lm(conductivity ~ temp, t)
summary(lm2)
effects_on_trout <- glmer(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = "binomial")
lm1 <- lm(avg_canopy_cover ~ temp, t)
t$res_canopy <- residuals(lm1) # The effects of canopy cover after accounting for temp.
lm2 <- lm(conductivity ~ temp, t)
summary(lm2)
t$res_conductivity <- residuals(lm2) # The effects of conductivity after accounting for temp.
effects_on_trout <- glmer(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
?glmmTMB::family_glmmTMB
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = "negbinom1")
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = "nbinom1")
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = nbinom1(link = "log"))
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = nbinom1(link = "log"))
library(glmmTMB)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = nbinom1(link = "log"))
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = "binomial")
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) * scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
p1 <- tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
cowplot::theme_cowplot()+
labs(x = "Average max depth (units)", y = "Trout presence / absence")
cowplot::plot_grid(p1, p2)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
p1 <- tidy(effects_on_trout) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = estimate - std.error, ymax = estimate + std.error, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
cowplot::theme_cowplot()+
labs(x = "Average max depth (units)", y = "Trout presence / absence")
cowplot::plot_grid(p1, p2)
summary(effects_on_trout)
?tidy
tidy(effects_on_trout, conf.int = T)
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
cowplot::theme_cowplot()+
labs(x = "Average max depth (units)", y = "Trout presence / absence")
cowplot::plot_grid(p1, p2)
cowplot::plot_grid(p1, p2, align = "v", axis = "b")
tidy(effects_on_trout, conf.int = T)
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity" ~ "Conductivity (res. temp)"))
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity" ~ "Conductivity (res. temp)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence / absence")
cowplot::plot_grid(p1, p2, align = "v", axis = "b")
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity" ~ "Conductivity (res. temp)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence / absence")
cowplot::plot_grid(p1, p2, align = "v", axis = "b")
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity)" ~ "Conductivity (res. temp)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence / absence")
cowplot::plot_grid(p1, p2, align = "v", axis = "b")
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity)" ~ "Conductivity (res. temp)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(y = "", x = "Estimate") +
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence / absence")
cowplot::plot_grid(p1, p2, align = "v", axis = "b", rel_widths = c(0.5, 1))
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence")
cowplot::plot_grid(p1, p2, align = "v", axis = "b", rel_widths = c(0.5, 1))
ggsave("figures/effects_on_trout.png", device = "png")
p2
cowplot::plot_grid(p1, p2, rel_widths = c(0.5, 1))
cowplot::plot_grid(p1, p2, align = "v", rel_widths = c(0.5, 1))
cowplot::plot_grid(p1, p2, align = "v", axis = "b", rel_widths = c(0.5, 1))
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity)" ~ "Conductivity (res. temp)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence")
cowplot::plot_grid(p1, p2, rel_widths = c(0.5, 1))
ggsave("figures/effects_on_trout.png", device = "png")
responses[[1]]
predictors
t
names(t)
drivers <- t[, c(names(t) %in% responses[[1]] == T, "avg_daily_disch_nr_nrst_gage", "preceding_yr_dry_duration_ys")]
drivers <- t[, c(names(t) %in% responses[[1]] == T, c("avg_daily_disch_nr_nrst_gage", "preceding_yr_dry_duration_ys"))]
names(t) %in% responses[[1]] == T, c("avg_daily_disch_nr_nrst_gage", "preceding_yr_dry_duration_ys")
c(names(t) %in% responses[[1]] == T, c("avg_daily_disch_nr_nrst_gage", "preceding_yr_dry_duration_ys"))
names(t) %in% responses[[1]] == T
responses[[1]]
names(t) %in% responses[[1]]
drivers <- t[, names(t) %in% c(responses[[1]], "avg_daily_disch_nr_rnst_gage", "preceding_yr_dry_duration_ys") == T]
psych::cor.plot(drivers) # lots of colinearity
png("figures/correlogram.png")
psych::cor.plot(drivers)
dev.off()
psych::pairs.panels(select(drivers, -c(flow, leaf_cpom_wet_wt)))
drivers <- t[, names(t) %in% c(responses[[1]], "avg_daily_disch_nr_nrst_gage", "preceding_yr_dry_duration_ys") == T]
psych::cor.plot(drivers) # lots of colinearity
psych::pairs.panels(select(drivers, -c(flow, leaf_cpom_wet_wt)))
t <- t %>%
mutate(trout.binomial = ifelse(trout == "absent", 0, 1))
lm3 <- lm(avg_daily_disch_nr_nrst_gage ~ do, t)
summary(lm3)
t$res_discharge <- residuals(lm3)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity)" ~ "Conductivity (res. temp)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
p1
summary(effects_on_trout)
cor.test(t$do, t$res_conductivity)
psych::pairs.panels(select(drivers, -c(flow, leaf_cpom_wet_wt)))
lm2 <- lm(conductivity ~ temp + do, t)
summary(lm2)
t$res_conductivity <- residuals(lm2) # The effects of conductivity after accounting for temp.
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
psych::pairs.panels(t[names(t) %in% c("avg_max_depth", "temp", "do", "res_canopy", "res_conductivity", "res_discharge") == T])
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(log(res_canopy)) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
lm4 <- lm(do ~ temp, t)
summary(lm4)
psych::pairs.panels(t[names(t) %in% c("avg_max_depth", "temp", "do", "res_canopy", "res_conductivity", "res_discharge") == T])
library(glmmTMB)
effects_on_trout <- glmmTMB::glmmTMB(trout.binomial ~ scale(avg_max_depth) + scale(temp) + scale(do) + scale(res_canopy) + scale(res_conductivity) + scale(res_discharge) + (1|code) + (1|year), t, family = "binomial")
summary(effects_on_trout)
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity)" ~ "Conductivity (res. temp)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence")
cowplot::plot_grid(p1, p2, rel_widths = c(0.5, 1))
ggsave("figures/effects_on_trout.png", device = "png")
term == "scale(res_discharge)" ~ "Discharge (res. do)") %>%
p1 <- tidy(effects_on_trout, conf.int = T) %>%
filter(effect == "fixed") %>%
mutate(sig = ifelse(p.value < 0.05, "significant", "NS")) %>%
mutate(term = case_when(term == "(Intercept)" ~ "Intercept",
term == "scale(avg_max_depth)" ~ "Avg. max. depth",
term == "scale(temp)" ~ "Temp",
term == "scale(do)" ~ "DO",
term == "scale(res_canopy)" ~ "Canopy (res. temp)",
term == "scale(res_conductivity)" ~ "Conductivity (res. temp + do)",
term == "scale(res_discharge)" ~ "Discharge (res. do)")) %>%
ggplot(aes(x = term, y = estimate))+
geom_pointrange(aes(y = estimate, ymin = conf.low, ymax = conf.high, fill = sig), pch = 21, show.legend = F)+
scale_fill_manual(values = c("white", "black"))+
coord_flip()+
geom_hline(yintercept = 0, linetype = 4)+
labs(x = "", y = "Estimate") +
theme_classic()
vec <- seq(min(t$avg_max_depth), max(t$avg_max_depth), length.out = 100)
pred_trout <- as.data.frame(ggpredict(effects_on_trout, terms = c("avg_max_depth[vec]"))) %>%
rename(avg_max_depth = x)
p2 <- ggplot(t, aes(x = avg_max_depth, y = trout.binomial))+
geom_point()+
geom_line(data = pred_trout, aes(x = avg_max_depth, y = predicted))+
geom_ribbon(data = pred_trout, aes(x = avg_max_depth, y = predicted, ymin = conf.low, ymax = conf.high), alpha = 0.25)+
theme_classic()+
labs(x = "Average max depth (units)", y = "Trout presence")
cowplot::plot_grid(p1, p2, rel_widths = c(0.5, 1))
ggsave("figures/effects_on_trout.png", device = "png")
responses
mod.sample <- glmer(pool ~ trout * scale(avg_daily_disch_nr_nrst_gage) + scale(preceding_yr_dry_duration_ys) + (1|code) + (1|year), t, family = "poisson")
summary(mod.sample)
plot(ggpredict(mod.sample))
plot(ggpredict(mod.sample, terms = ~trout*avg_daily_disch_nr_nrst_gage))
plot(ggpredict(mod.sample, terms = ~avg_daily_disch_nr_nrst_gage*trout))
